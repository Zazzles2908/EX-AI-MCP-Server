{
  "project": {
    "name": "EX-AI MCP Server",
    "type": "python-websocket-server",
    "framework": "asyncio",
    "primary_language": "python",
    "version": "2.0.0",
    "description": "Model Context Protocol server with AI capabilities"
  },
  "capabilities": {
    "code_review": true,
    "security_audit": true,
    "performance_analysis": true,
    "documentation_generation": true,
    "test_generation": true,
    "refactoring_suggestions": true,
    "debugging_assistance": true,
    "architecture_analysis": true
  },
  "mcp_tools": {
    "analysis": {
      "primary": "mcp_analyze",
      "review": "mcp_codereview",
      "refactor": "mcp_refactor",
      "debug": "mcp_debug"
    },
    "security": {
      "audit": "mcp_secaudit",
      "precommit": "mcp_precommit"
    },
    "documentation": {
      "generator": "mcp_docgen",
      "test_generator": "mcp_testgen"
    },
    "collaboration": {
      "planner": "mcp_planner",
      "consensus": "mcp_consensus",
      "challenge": "mcp_challenge"
    }
  },
  "focus_areas": [
    "websocket_handling",
    "mcp_protocol",
    "error_handling",
    "security",
    "performance",
    "testing",
    "documentation"
  ],
  "exclusions": [
    "__pycache__",
    "*.pyc",
    ".git",
    "logs/*",
    "*.log",
    "node_modules",
    ".env",
    "*.env"
  ],
  "analysis_depth": "comprehensive",
  "reporting": {
    "format": "markdown",
    "output_directory": "docs/abacus/reports",
    "include_metrics": true,
    "include_recommendations": true,
    "include_code_examples": true
  },
  "workflows": {
    "daily_analysis": {
      "schedule": "0 9 * * *",
      "steps": [
        {
          "name": "code_analysis",
          "tool": "mcp_analyze",
          "parameters": {
            "analysis_type": "general",
            "confidence": "high",
            "use_websearch": true
          }
        },
        {
          "name": "security_check",
          "tool": "mcp_secaudit",
          "parameters": {
            "audit_focus": "owasp",
            "threat_level": "high"
          }
        }
      ]
    },
    "precommit_validation": {
      "trigger": "pre_commit",
      "steps": [
        {
          "name": "precommit_check",
          "tool": "mcp_precommit",
          "parameters": {
            "include_staged": true,
            "severity_filter": "medium"
          }
        },
        {
          "name": "quick_security_scan",
          "tool": "mcp_secaudit",
          "parameters": {
            "audit_focus": "owasp",
            "severity_filter": "high"
          }
        }
      ]
    },
    "issue_investigation": {
      "trigger": "on_demand",
      "steps": [
        {
          "name": "debug_analysis",
          "tool": "mcp_debug",
          "parameters": {
            "thinking_mode": "high",
            "use_websearch": true
          }
        },
        {
          "name": "deep_investigation",
          "tool": "mcp_thinkdeep",
          "parameters": {
            "thinking_mode": "max",
            "focus_areas": ["architecture", "performance", "security"]
          }
        }
      ]
    }
  },
  "models": {
    "primary": "glm-4.5-flash",
    "fallback": "kimi-latest",
    "high_complexity": "kimi-k2-turbo-preview",
    "consensus_models": [
      {"model": "glm-4.5-flash", "stance": "neutral"},
      {"model": "kimi-latest", "stance": "for"},
      {"model": "kimi-k2-turbo-preview", "stance": "against"}
    ]
  },
  "thinking_modes": {
    "simple_tasks": "low",
    "standard_analysis": "medium",
    "complex_investigation": "high",
    "critical_analysis": "max"
  },
  "performance": {
    "timeout_settings": {
      "quick_analysis": 30,
      "standard_review": 120,
      "deep_investigation": 300
    },
    "retry_attempts": 3,
    "fallback_enabled": true
  },
  "monitoring": {
    "metrics": {
      "tool_usage_frequency": {
        "mcp_analyze": "daily",
        "mcp_codereview": "per_commit",
        "mcp_secaudit": "weekly",
        "mcp_debug": "on_demand"
      },
      "success_rates": {
        "target_success_rate": 0.95,
        "error_threshold": 0.05,
        "timeout_threshold": 0.02
      }
    },
    "performance_tracking": {
      "response_times": {
        "mcp_analyze": {"target": 60, "max": 120},
        "mcp_codereview": {"target": 90, "max": 180},
        "mcp_secaudit": {"target": 120, "max": 300}
      },
      "quality_metrics": {
        "accuracy": 0.90,
        "completeness": 0.85,
        "relevance": 0.88
      }
    },
    "alerts": {
      "error_rate_threshold": 0.10,
      "response_time_threshold": 300,
      "notification_channels": ["email", "slack"]
    }
  },
  "security": {
    "audit_settings": {
      "compliance_frameworks": ["OWASP", "SOC2", "PCI DSS"],
      "threat_modeling": true,
      "vulnerability_scanning": true,
      "code_analysis": true
    },
    "security_rules": {
      "input_validation": true,
      "authentication_checks": true,
      "authorization_verification": true,
      "encryption_validation": true,
      "secure_communication": true
    },
    "reporting": {
      "security_dashboard": true,
      "vulnerability_reports": true,
      "compliance_reports": true,
      "risk_assessments": true
    }
  }
}