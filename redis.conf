# Redis Configuration for EXAI MCP Server
# Optimized for AMD Ryzen 7 7700X with 64GB RAM
# Date: 2025-10-16

# ============================================================
# MEMORY CONFIGURATION
# ============================================================
# Set maximum memory to 4GB (conservative for 64GB system)
maxmemory 4gb

# Use LRU eviction policy when maxmemory is reached
# This ensures oldest/least-used keys are evicted first
maxmemory-policy allkeys-lru

# ============================================================
# PERSISTENCE CONFIGURATION - RDB (Snapshots)
# ============================================================
# Save the DB to disk:
# save <seconds> <changes>
# Will save the DB if both the given number of seconds and the given
# number of write operations against the DB occurred.

# Save after 15 minutes if at least 1 key changed
save 900 1

# Save after 5 minutes if at least 10 keys changed
save 300 10

# Save after 1 minute if at least 10000 keys changed
save 60 10000

# Compress RDB files using LZF compression
rdbcompression yes

# Add checksum to RDB files for corruption detection
rdbchecksum yes

# The filename where to dump the DB
dbfilename dump.rdb

# The working directory where RDB and AOF files will be written
dir /data

# ============================================================
# PERSISTENCE CONFIGURATION - AOF (Append Only File)
# ============================================================
# Enable AOF persistence mode
appendonly yes

# The name of the append only file
appendfilename "appendonly.aof"

# AOF fsync policy:
# - no: don't fsync, just let the OS flush the data when it wants (faster)
# - always: fsync after every write (slow, safest)
# - everysec: fsync only once per second (good compromise)
appendfsync everysec

# Don't use fsync while a BGSAVE or BGREWRITEAOF is in progress
# This prevents blocking the main process during heavy I/O
no-appendfsync-on-rewrite no

# Automatic AOF rewrite configuration
# Redis will automatically rewrite the AOF when it grows by this percentage
auto-aof-rewrite-percentage 100

# Minimum size for AOF rewrite (prevents rewriting small files)
auto-aof-rewrite-min-size 64mb

# Load truncated AOF files on startup (useful for crash recovery)
aof-load-truncated yes

# Use RDB-AOF hybrid format for faster restarts
aof-use-rdb-preamble yes

# ============================================================
# NETWORK CONFIGURATION
# ============================================================
# TCP listen() backlog
tcp-backlog 511

# Close the connection after a client is idle for N seconds (0 to disable)
timeout 0

# TCP keepalive
# Send TCP ACKs to clients every N seconds to detect dead connections
tcp-keepalive 300

# ============================================================
# GENERAL CONFIGURATION
# ============================================================
# Set the number of databases (default is 16)
databases 16

# Log level: debug, verbose, notice, warning
loglevel notice

# Log file (empty string = log to stdout)
logfile ""

# ============================================================
# PERFORMANCE TUNING
# ============================================================
# Disable transparent huge pages (THP) warning
# This is handled at the OS level, but we acknowledge it here
# Run: echo never > /sys/kernel/mm/transparent_hugepage/enabled

# Lazy freeing configuration (helps with large deletions)
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no
replica-lazy-flush no

# ============================================================
# SECURITY
# ============================================================
# Disable protected mode (we're running in Docker network)
protected-mode no

# Bind to all interfaces (Docker handles network isolation)
bind 0.0.0.0

# ============================================================
# OPTIMIZATION FOR NVME SSD
# ============================================================
# These settings are optimized for your Samsung 990 EVO Plus NVMe SSD
# - Fast fsync operations (everysec is safe with NVMe)
# - Aggressive AOF rewrite (NVMe handles I/O well)
# - RDB compression enabled (CPU is fast enough)

# ============================================================
# MONITORING & DEBUGGING
# ============================================================
# Enable latency monitoring
latency-monitor-threshold 100

# Slow log configuration (log queries slower than 10ms)
slowlog-log-slower-than 10000
slowlog-max-len 128

